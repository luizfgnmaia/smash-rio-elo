df$p1[which(df$p1 == old_name)] = new_name
df$p2[which(df$p2 == old_name)] = new_name
df
}
sets_fixed = sets_fixed %>%
fix("ace", "Ace") %>%
fix("Amortaxx", "Amortax") %>%
fix("Burtao", "Burtão") %>%
#Artch?
fix("Dr. NEFÁRIO", "Chino") %>%
fix("Festa", "Fexta!") %>%
fix("Thi Festa", "Fexta!") %>%
fix("gamer girl", "Sky") %>%
fix("jao", "Jao") %>% # ?
#Janjão?
fix("Lugia", "LUGIA") %>%
fix("Monado", "Monad0") %>%
fix("Morkez", "Morkerz") %>% # ?
fix("Sahione Advogados", "Joaoarara") %>%
fix("Sem chance", "S/Chance") %>%
fix("ROT | Conker", "Conker") %>%
fix("ROT|Sully", "Sully")
sets_fixed
save(sets_fixed, file = "sets_fixed.RData")
write.table(sets_fixed, file = "sets_fixed.csv", sep = ";", na = "", row.names = FALSE)
tmp = tibble(p = c(sets_fixed$p1, sets_fixed$p2), id = c(sets_fixed$id1, sets_fixed$id2)) %>%
distinct(id, .keep_all = TRUE) %>%
arrange(p) %>%
distinct(p)
tmp
library(dplyr)
library(elo)
load("sets_fixed.RData")
sets = sets_fixed
sets = sets %>%
mutate(result = score1/(score1 + score2),
k = best_of * 10)
library(dplyr)
library(elo)
load("sets_fixed.RData")
sets = sets_fixed
sets = sets %>%
mutate(result = score1/(score1 + score2),
k = first_to * 10)
sets
players = tibble(player = c(sets$p1, sets$p2))
players = data.frame(player = unique(c(sets$p1, sets$p2))) %>%
mutate(elo = 1500)
players
for (i in 1:nrow(sets)) {
set = sets[i,]
p1_elo = subset(players, player == set$p1)$elo
p2_elo = subset(players, player == set$p2)$elo
new_elo = elo.calc(wins.A = set$result,
elo.A = p1_elo,
elo.B = p2_elo,
k = set$k)
p1_new_elo = new_elo[1, 1]
p2_new_elo = new_elo[1, 2]
players = players %>%
mutate(elo = if_else(player == set$p1, p1_new_elo,
if_else(player == set$p2, p2_new_elo, elo)))
}
players %>%
arrange(desc(elo))
players = players %>%
mutate(set_wins = NA,
total_sets = NA,
set_perc = NA,
game_wins = NA,
total_games = NA,
game_perc = NA,
tournaments = NA)
for(i in 1:nrow(players)){
p1 = sets %>%
filter(p1 == players$player[i])
set_wins_1 = p1 %>%
filter(result > 0.5) %>%
nrow()
total_sets_1 = p1 %>%
nrow()
game_wins_1 = sum(p1$score1)
total_games_1 = sum(p1$score1) + sum(p1$score2)
p2 = sets %>%
filter(p2 == players$player[i])
set_wins_2 = p2 %>%
filter(result < 0.5) %>%
nrow()
total_sets_2 = p2 %>%
nrow()
game_wins_2 = sum(p2$score2)
total_games_2 = sum(p2$score1) + sum(p2$score2)
players$set_wins[i] = set_wins_1 + set_wins_2
players$total_sets[i] = total_sets_1 + total_sets_2
players$set_perc[i] = players$set_wins[i]/players$total_sets[i]
players$game_wins[i] = game_wins_1 + game_wins_2
players$total_games[i] = total_games_1 + total_games_2
players$game_perc[i] = players$game_wins[i]/players$total_games[i]
players$tournaments[i] = length(unique(c(p1$tournament, p2$tournament)))
}
players = players %>%
arrange(desc(elo))
players
write.table(players, file = "elo.csv", sep = ";", na = "", row.names = FALSE, dec = ",")
library(dplyr)
library(elo)
load("sets_fixed.RData")
sets = sets_fixed
library(dplyr)
library(elo)
load("sets_fixed.RData")
sets = sets_fixed
sets = sets %>%
mutate(result = score1/(score1 + score2),
k = first_to * 10)
sets
players = tibble(player = c(sets$p1, sets$p2))
players = data.frame(player = unique(c(sets$p1, sets$p2))) %>%
mutate(elo = 1500)
players
for (i in 1:nrow(sets)) {
set = sets[i,]
p1_elo = subset(players, player == set$p1)$elo
p2_elo = subset(players, player == set$p2)$elo
new_elo = elo.calc(wins.A = set$result,
elo.A = p1_elo,
elo.B = p2_elo,
k = set$k)
p1_new_elo = new_elo[1, 1]
p2_new_elo = new_elo[1, 2]
players = players %>%
mutate(elo = if_else(player == set$p1, p1_new_elo,
if_else(player == set$p2, p2_new_elo, elo)))
}
players %>%
arrange(desc(elo))
players = players %>%
mutate(set_wins = NA,
total_sets = NA,
set_perc = NA,
game_wins = NA,
total_games = NA,
game_perc = NA,
tournaments = NA)
for(i in 1:nrow(players)){
p1 = sets %>%
filter(p1 == players$player[i])
set_wins_1 = p1 %>%
filter(result > 0.5) %>%
nrow()
total_sets_1 = p1 %>%
nrow()
game_wins_1 = sum(p1$score1)
total_games_1 = sum(p1$score1) + sum(p1$score2)
p2 = sets %>%
filter(p2 == players$player[i])
set_wins_2 = p2 %>%
filter(result < 0.5) %>%
nrow()
total_sets_2 = p2 %>%
nrow()
game_wins_2 = sum(p2$score2)
total_games_2 = sum(p2$score1) + sum(p2$score2)
players$set_wins[i] = set_wins_1 + set_wins_2
players$total_sets[i] = total_sets_1 + total_sets_2
players$set_perc[i] = players$set_wins[i]/players$total_sets[i]
players$game_wins[i] = game_wins_1 + game_wins_2
players$total_games[i] = total_games_1 + total_games_2
players$game_perc[i] = players$game_wins[i]/players$total_games[i]
players$tournaments[i] = length(unique(c(p1$tournament, p2$tournament)))
}
players = players %>%
arrange(desc(elo))
players
save(players, file = "players.RData")
write.table(players, file = "elo.csv", sep = ";", na = "", row.names = FALSE, dec = ",")
load("players.RData")
boh = c("Luffy", "RevoS", "LUGIA", "Sky", "Floko", "Sosser", "mysterE", "Joaoarara",
"Amortax", "Conker", "Luckstorm", "Wright", "Maleson", "Ultimate", "Considera", "Ace",
"Ihmo", "Afro", "Magician", "Alonso", "Polon", "Roc~", "FR7", "LA FLAMME",
"Ozzy", "S/Chance", "BeBop", "Arch", "Steel", "Lou", "Strig", "GUCCI",
"Vyse", "LCS", "Haxwei", "Naval", "Dypherius", "Najjar", "ChaosPrime", "JBB",
"FireEmblem", "LonLon", "Chino", "MICK", "Sully", "Naty", "Gim", "Nenfz",
"Ren", "Leow", "Mini Vegeta", "Morkez", "Fy", "Sabino", "DSK", "Anubis570")
players %>%
filter(player %in% boh)
setdiff(players$player, boh)
setdiff(boh, players$player)
players %>%
filter(player == "Young la Flamme")
View(sets)
library(dplyr)
source("json_to_df.R")
sets = list.files("tournaments") %>%
lapply(json_to_df) %>%
do.call(rbind, .) %>%
filter(score1 >= 0, score2 >= 0) %>%
rowwise() %>%
mutate(first_to = max(score1, score2))
sets
View(sets)
boh = c("Luffy", "RevoS", "LUGIA", "Sky", "Floko", "Sosser", "mysterE", "Joaoarara",
"Amortax", "Conker", "Luckstorm", "Wright", "Maleson", "Ultimate", "Considera", "Ace",
"Ihmo", "Afro", "Magician", "Alonso", "Polon", "Roc~", "FR7", "LA FLAMME",
"Ozzy", "S/Chance", "BeBop", "Arch", "Steel", "Lou", "Strig", "GUCCI",
"Vyse", "LCS", "Haxwei", "Naval", "Dypherius", "Najjar", "ChaosPrime", "JBB",
"FireEmblem", "LonLon", "Chino", "MICK", "Sully", "Naty", "Gim", "Nenfz",
"Ren", "Leow", "Mini Vegeta", "Morkez", "Fy", "Sabino", "DSK", "Anubis570")
setdiff(boh, players$player)
boh = c(boh, "Fyfox")
players %>%
filter(player %in% players)
players %>%
filter(player %in% boh)
setdiff(boh, players$player)
library(dplyr)
load("players.RData")
boh = c("Luffy", "RevoS", "LUGIA", "Sky", "Floko", "Sosser", "mysterE", "Joaoarara",
"Amortax", "Conker", "Luckstorm", "Wright", "Maleson", "Ultimate", "Considera", "Ace",
"Ihmo", "Afro", "Magician", "Alonso", "Polon", "Roc~", "FR7", "LA FLAMME",
"Ozzy", "S/Chance", "BeBop", "Arch", "Steel", "Lou", "Strig", "GUCCI",
"Vyse", "LCS", "Haxwei", "Naval", "Dypherius", "Najjar", "ChaosPrime", "JBB",
"FireEmblem", "LonLon", "Chino", "MICK", "Sully", "Naty", "Gim", "Nenfz",
"Ren", "Leow", "Mini Vegeta", "Morkez", "Fy", "Sabino", "DSK", "Anubis570")
setdiff(boh, players$player)
boh = c(boh, "FyFox")
players %>%
filter(player %in% boh)
player = c("Luffy", "Joaoarara", "Amortax", "Ace", "Ihmo", "LA FLAMME", "Ozzy", "GUCCI", "Vyse", "JBB", "FireEmblem",
"Nenfz", "Ren", "Anubis570", "RevoS", "mysterE", "Conker", "Considera", "Afro", "FR7", "S/Chance", "Strig",
"LCS", "ChaosPrime", "LonLon", "Gim", "Leow", "DSK", "LUGIA", "Sosser", "Luckstorm", "Ultimate", "Magician",
"Roc~", "BeBop", "Lou", "Haxwei", "Najjar", "Chino", "Naty", "Mini Vegeta", "Sabino", "Sky", "Floko",
"Wright", "Maleson", "Alonso", "Polon", "Arch", "Steel", "Naval", "Dypherius", "MICK", "Sully", "Morkez",
"FyFox")
pool = c(rep(1, 14), rep(2, 14), rep(3, 14), rep(4, 14))
boh = tibble(player, pool)
setdiff(boh$player, players$player)
boh %>%
inner_join(players) %>%
arrange(desc(elo))
library(dplyr)
source("json_to_df.R")
sets = list.files("tournaments") %>%
lapply(json_to_df) %>%
do.call(rbind, .) %>%
filter(score1 >= 0, score2 >= 0) %>%
rowwise() %>%
mutate(first_to = max(score1, score2))
sets
save(sets, file = "sets.RData")
write.table(sets, file = "sets.csv", sep = ";", na = "", row.names = FALSE)
tmp = tibble(p = c(sets$p1, sets$p2), id = c(sets$id1, sets$id2)) %>%
distinct(id, .keep_all = TRUE) %>%
arrange(p)
tmp
tmp = tibble(p = c(sets$p1, sets$p2), id = c(sets$id1, sets$id2)) %>%
distinct(id, .keep_all = TRUE) %>%
arrange(p) %>%
distinct(p)
tmp
sets_fixed = sets
fix <- function(df, old_name, new_name){
df$p1[which(df$p1 == old_name)] = new_name
df$p2[which(df$p2 == old_name)] = new_name
df
}
sets_fixed = sets_fixed %>%
fix("ace", "Ace") %>%
fix("Amortaxx", "Amortax") %>%
fix("Burtao", "Burtão") %>%
#Artch?
fix("Dr. NEFÁRIO", "Chino") %>%
fix("Festa", "Fexta!") %>%
fix("Thi Festa", "Fexta!") %>%
fix("gamer girl", "Sky") %>%
fix("jao", "Jao") %>% # ?
#Janjão?
fix("Lugia", "LUGIA") %>%
fix("Monado", "Monad0") %>%
fix("Morkerz", "Morkez") %>% # ?
fix("Sahione Advogados", "Joaoarara") %>%
fix("Sem chance", "S/Chance") %>%
fix("ROT | Conker", "Conker") %>%
fix("ROT|Sully", "Sully")
sets_fixed
save(sets_fixed, file = "sets_fixed.RData")
write.table(sets_fixed, file = "sets_fixed.csv", sep = ";", na = "", row.names = FALSE)
tmp = tibble(p = c(sets_fixed$p1, sets_fixed$p2), id = c(sets_fixed$id1, sets_fixed$id2)) %>%
distinct(id, .keep_all = TRUE) %>%
arrange(p) %>%
distinct(p)
tmp
library(dplyr)
library(elo)
load("sets_fixed.RData")
sets = sets_fixed
sets = sets %>%
mutate(result = score1/(score1 + score2),
k = first_to * 10)
sets
players = tibble(player = c(sets$p1, sets$p2))
players = data.frame(player = unique(c(sets$p1, sets$p2))) %>%
mutate(elo = 1500)
players
for (i in 1:nrow(sets)) {
set = sets[i,]
p1_elo = subset(players, player == set$p1)$elo
p2_elo = subset(players, player == set$p2)$elo
new_elo = elo.calc(wins.A = set$result,
elo.A = p1_elo,
elo.B = p2_elo,
k = set$k)
p1_new_elo = new_elo[1, 1]
p2_new_elo = new_elo[1, 2]
players = players %>%
mutate(elo = if_else(player == set$p1, p1_new_elo,
if_else(player == set$p2, p2_new_elo, elo)))
}
players %>%
arrange(desc(elo))
players = players %>%
mutate(set_wins = NA,
total_sets = NA,
set_perc = NA,
game_wins = NA,
total_games = NA,
game_perc = NA,
tournaments = NA)
for(i in 1:nrow(players)){
p1 = sets %>%
filter(p1 == players$player[i])
set_wins_1 = p1 %>%
filter(result > 0.5) %>%
nrow()
total_sets_1 = p1 %>%
nrow()
game_wins_1 = sum(p1$score1)
total_games_1 = sum(p1$score1) + sum(p1$score2)
p2 = sets %>%
filter(p2 == players$player[i])
set_wins_2 = p2 %>%
filter(result < 0.5) %>%
nrow()
total_sets_2 = p2 %>%
nrow()
game_wins_2 = sum(p2$score2)
total_games_2 = sum(p2$score1) + sum(p2$score2)
players$set_wins[i] = set_wins_1 + set_wins_2
players$total_sets[i] = total_sets_1 + total_sets_2
players$set_perc[i] = players$set_wins[i]/players$total_sets[i]
players$game_wins[i] = game_wins_1 + game_wins_2
players$total_games[i] = total_games_1 + total_games_2
players$game_perc[i] = players$game_wins[i]/players$total_games[i]
players$tournaments[i] = length(unique(c(p1$tournament, p2$tournament)))
}
players = players %>%
arrange(desc(elo))
players
save(players, file = "players.RData")
write.table(players, file = "elo.csv", sep = ";", na = "", row.names = FALSE, dec = ",")
library(dplyr)
load("players.RData")
player = c("Luffy", "Joaoarara", "Amortax", "Ace", "Ihmo", "LA FLAMME", "Ozzy", "GUCCI", "Vyse", "JBB", "FireEmblem",
"Nenfz", "Ren", "Anubis570", "RevoS", "mysterE", "Conker", "Considera", "Afro", "FR7", "S/Chance", "Strig",
"LCS", "ChaosPrime", "LonLon", "Gim", "Leow", "DSK", "LUGIA", "Sosser", "Luckstorm", "Ultimate", "Magician",
"Roc~", "BeBop", "Lou", "Haxwei", "Najjar", "Chino", "Naty", "Mini Vegeta", "Sabino", "Sky", "Floko",
"Wright", "Maleson", "Alonso", "Polon", "Arch", "Steel", "Naval", "Dypherius", "MICK", "Sully", "Morkez",
"FyFox")
pool = c(rep(1, 14), rep(2, 14), rep(3, 14), rep(4, 14))
boh = tibble(player, pool)
setdiff(boh$player, players$player)
boh %>%
inner_join(players) %>%
arrange(desc(elo))
boh = boh %>%
inner_join(players) %>%
arrange(desc(elo))
player = c("Luffy", "Joaoarara", "Amortax", "Ace", "Ihmo", "LA FLAMME", "Ozzy", "GUCCI", "Vyse", "JBB", "FireEmblem",
"Nenfz", "Ren", "Anubis570", "RevoS", "mysterE", "Conker", "Considera", "Afro", "FR7", "S/Chance", "Strig",
"LCS", "ChaosPrime", "LonLon", "Gim", "Leow", "DSK", "LUGIA", "Sosser", "Luckstorm", "Ultimate", "Magician",
"Roc~", "BeBop", "Lou", "Haxwei", "Najjar", "Chino", "Naty", "Mini Vegeta", "Sabino", "Sky", "Floko",
"Wright", "Maleson", "Alonso", "Polon", "Arch", "Steel", "Naval", "Dypherius", "MICK", "Sully", "Morkez",
"FyFox")
pool = c(rep(1, 14), rep(2, 14), rep(3, 14), rep(4, 14))
boh = tibble(player, pool)
setdiff(boh$player, players$player)
boh = boh %>%
inner_join(players) %>%
arrange(desc(elo))
boh = players %>%
rbind(tibble(player = setdiff(boh$player, players$player), elo = 1500))
boh
library(dplyr)
load("players.RData")
player = c("Luffy", "Joaoarara", "Amortax", "Ace", "Ihmo", "LA FLAMME", "Ozzy", "GUCCI", "Vyse", "JBB", "FireEmblem",
"Nenfz", "Ren", "Anubis570", "RevoS", "mysterE", "Conker", "Considera", "Afro", "FR7", "S/Chance", "Strig",
"LCS", "ChaosPrime", "LonLon", "Gim", "Leow", "DSK", "LUGIA", "Sosser", "Luckstorm", "Ultimate", "Magician",
"Roc~", "BeBop", "Lou", "Haxwei", "Najjar", "Chino", "Naty", "Mini Vegeta", "Sabino", "Sky", "Floko",
"Wright", "Maleson", "Alonso", "Polon", "Arch", "Steel", "Naval", "Dypherius", "MICK", "Sully", "Morkez",
"FyFox")
pool = c(rep(1, 14), rep(2, 14), rep(3, 14), rep(4, 14))
boh = tibble(player, pool)
setdiff(boh$player, players$player)
boh = boh %>%
inner_join(players) %>%
arrange(desc(elo))
boh = boh %>%
rbind(tibble(player = setdiff(boh$player, players$player), elo = 1500))
boh
library(dplyr)
load("players.RData")
player = c("Luffy", "Joaoarara", "Amortax", "Ace", "Ihmo", "LA FLAMME", "Ozzy", "GUCCI", "Vyse", "JBB", "FireEmblem",
"Nenfz", "Ren", "Anubis570", "RevoS", "mysterE", "Conker", "Considera", "Afro", "FR7", "S/Chance", "Strig",
"LCS", "ChaosPrime", "LonLon", "Gim", "Leow", "DSK", "LUGIA", "Sosser", "Luckstorm", "Ultimate", "Magician",
"Roc~", "BeBop", "Lou", "Haxwei", "Najjar", "Chino", "Naty", "Mini Vegeta", "Sabino", "Sky", "Floko",
"Wright", "Maleson", "Alonso", "Polon", "Arch", "Steel", "Naval", "Dypherius", "MICK", "Sully", "Morkez",
"FyFox")
pool = c(rep(1, 14), rep(2, 14), rep(3, 14), rep(4, 14))
boh = tibble(player, pool)
setdiff(boh$player, players$player)
boh = boh %>%
inner_join(players)
boh = boh %>%
rbind(tibble(player = setdiff(boh$player, players$player), elo = 1500)) %>%
arrange(desc(elo))
boh
boh %>%
group_by(pool) %>%
summarise(mean(elo))
boh %>%
group_by(pool) %>%
summarise(mean = mean(elo)) %>%
arrange(desc(mean(elo)))
boh %>%
group_by(pool) %>%
summarise(mean = mean(elo)) %>%
arrange(desc(mean))
boh %>%
group_by(pool) %>%
summarise(var = var(elo)) %>%
arrange(desc(var))
boh %>%
group_by(pool) %>%
summarise(var = var(elo)) %>%
arrange(var)
ggplot(boh, aes(x = elo, y = pool)) +
geom_boxplot()
library(ggplot2)
ggplot(boh, aes(x = elo, y = pool)) +
geom_boxplot()
ggplot(boh, aes(y = elo, x = pool)) +
geom_boxplot()
library(ggplot2)
boh %>%
mutate(pool = as.factor(pool)) %>%
ggplot(aes(y = elo)) %>%
geom_boxplot()
library(ggplot2)
boh %>%
mutate(pool = as.factor(pool)) %>%
ggplot(aes(y = elo)) +
geom_boxplot()
library(ggplot2)
boh %>%
mutate(pool = as.factor(pool)) %>%
ggplot(aes(y = elo, x = pool)) +
geom_boxplot()
library(ggplot2)
boh %>%
mutate(pool = as.factor(pool)) %>%
ggplot(aes(y = elo, x = pool)) +
geom_boxplot() +
theme_bw()
boh = boh %>%
rbind(tibble(player = setdiff(boh$player, players$player), elo = 1500)) %>%
arrange(desc(elo))
boh
tibble(player = setdiff(boh$player, players$player), elo = 1500)
library(dplyr)
load("players.RData")
player = c("Luffy", "Joaoarara", "Amortax", "Ace", "Ihmo", "LA FLAMME", "Ozzy", "GUCCI", "Vyse", "JBB", "FireEmblem",
"Nenfz", "Ren", "Anubis570", "RevoS", "mysterE", "Conker", "Considera", "Afro", "FR7", "S/Chance", "Strig",
"LCS", "ChaosPrime", "LonLon", "Gim", "Leow", "DSK", "LUGIA", "Sosser", "Luckstorm", "Ultimate", "Magician",
"Roc~", "BeBop", "Lou", "Haxwei", "Najjar", "Chino", "Naty", "Mini Vegeta", "Sabino", "Sky", "Floko",
"Wright", "Maleson", "Alonso", "Polon", "Arch", "Steel", "Naval", "Dypherius", "MICK", "Sully", "Morkez",
"FyFox")
pool = c(rep(1, 14), rep(2, 14), rep(3, 14), rep(4, 14))
boh = tibble(player, pool)
new_players = setdiff(boh$player, players$player)
new_players
boh = boh %>%
inner_join(players)
boh = boh %>%
rbind(tibble(player = setdiff(boh$player, players$player), elo = 1500)) %>%
arrange(desc(elo))
boh
boh %>%
group_by(pool) %>%
summarise(mean = mean(elo)) %>%
arrange(desc(mean))
boh %>%
group_by(pool) %>%
summarise(mean = mean(elo),
median = median(elo),
var = var(elo)) %>%
arrange(desc(mean))
library(ggplot2)
boh %>%
mutate(pool = as.factor(pool)) %>%
ggplot(aes(y = elo, x = pool)) +
geom_boxplot() +
theme_bw()
