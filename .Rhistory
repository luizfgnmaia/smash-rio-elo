library(dplyr)
load("data/sets_fixed.RData")
for(i in 1:nrow(sets_fixed)) {
if(sets_fixed$p1[i] > sets_fixed$p2[i]) {
tmp_p1 = sets_fixed$p1[i]
#tmp_id1 = sets_fixed$id1[i]
tmp_score1 = sets_fixed$score1[i]
sets_fixed$p1[i] = sets_fixed$p2[i]
#sets_fixed$id1[i] = sets_fixed$id2[i]
sets_fixed$score1[i] = sets_fixed$score2[i]
sets_fixed$p2[i] = tmp_p1
#sets_fixed$id2[i] = tmp_id1
sets_fixed$score2[i] = tmp_score1
}
}
sets_suma = sets_fixed %>%
mutate(win_p1 = ifelse(score1 > score2, 1, 0)) %>%
mutate(win_p2 = ifelse(score1 > score2, 0, 1)) %>%
group_by(p1, p2) %>%
summarise(sets = n(),
set_wins_p1 = sum(win_p1),
set_wins_p2 = sum(win_p2),
game_wins_p1 = sum(score1),
game_wins_p2 = sum(score2),
tournaments = paste(tournament, collapse = ", ")) %>%
arrange(desc(sets))
sets_suma
save(sets_suma, file = "data/sets_suma.RData")
write.table(sets_suma, file = "data/sets_suma.csv", sep = ",", na = "", row.names = FALSE)
View(sets_suma)
library(dplyr)
library(knitr)
load("data/players.RData")
load("data/sets_fixed.RData")
unique(sets_fixed$tournament)
players %>%
filter(tournaments > 2) %>%
mutate(sign = ifelse(var_elo >= 0, "+", "-"),
var_elo = abs(var_elo),
elo = paste0(round(elo, 2), " (", sign, round(var_elo, 2), ")")) %>%
select(-list_tournaments,
-old_elo,
-var_elo,
-sign) %>%
head(50) %>%
kable(digits = 2, format = "markdown", row.names = TRUE)
library(dplyr)
source("json_to_df.R")
sets_raw = list.files("data/tournaments") %>%
lapply(json_to_df) %>%
do.call(rbind, .) %>%
filter(score1 >= 0, score2 >= 0) %>%
rowwise() %>%
mutate(first_to = max(score1, score2))
sets_raw
save(sets_raw, file = "data/sets_raw.RData")
write.table(sets_raw, file = "data/sets_raw.csv", sep = ",", na = "", row.names = FALSE)
sets_fixed = sets_raw %>%
select(-id1, -id2)
fix_tag <- function(df, old_tag, new_tag, tournament = NULL) {
if(!is.null(tournament)) {
df$p1[which(df$p1 == old_tag & df$tournament == tournament)] = new_tag
df$p2[which(df$p2 == old_tag & df$tournament == tournament)] = new_tag
} else {
df$p1[which(df$p1 == old_tag)] = new_tag
df$p2[which(df$p2 == old_tag)] = new_tag
}
df
}
fix_set <- function(df, tournament, old_p1, old_score1, old_p2, old_score2, new_p1, new_score1, new_p2, new_score2) {
row = which(df$tournament == tournament & df$p1 == old_p1 & df$score1 == old_score1 & df$p2 == old_p2 & df$score2 == old_score2)
if(length(row) > 1)
return("Mais de um resultado, wtf?")
df$p1[row] = new_p1
df$score1[row] = new_score1
df$p2[row] = new_p2
df$score2[row] = new_score2
df
}
delete_set <- function(df, p1, score1, p2, score2, tournament) {
row = which(df$tournament == tournament & df$p1 == p1 & df$score1 == score1 & df$p2 == p2 & df$score2 == score2)
df[-row,]
}
add_set <- function(df, p1, score1, p2, score2, completed, tournament, first_to) {
tmp = tibble(p1 = p1, score1 = score1, p2 = p2, score2 = score2, completed = completed, tournament = tournament, first_to = first_to)
df %>%
rbind(tmp) %>%
arrange(completed)
}
sets_fixed = sets_fixed %>%
fix_tag("ace", "Ace") %>%
fix_tag("Amortaxx", "Amortax") %>%
fix_tag("Burtao", "Burtão") %>%
#Artch?
fix_tag("Dr. NEFÁRIO", "Chino") %>%
fix_tag("Festa", "Fexta!") %>%
fix_tag("Thi Festa", "Fexta!") %>%
fix_tag("gamer girl", "Sky") %>%
fix_tag("jao", "Jao") %>% # ?
#Janjão?
fix_tag("Lugia", "LUGIA") %>%
fix_tag("Monado", "Monad0") %>%
fix_tag("Morkerz", "Morkez") %>% # ?
fix_tag("Sahione Advogados", "Joaoarara") %>%
fix_tag("Sem chance", "S/Chance") %>%
fix_tag("ROT | Conker", "Conker") %>%
fix_tag("ROT|Sully", "Sully") %>%
fix_tag("FyFox", "Fy") %>%
fix_tag("Oliveira", "Naval") %>%
fix_tag("Conker", "Chadin", "Battle Of Hyrule") %>%
fix_tag("MICK", "Mick") %>%
fix_tag("Fexta!", "ThiFesta") %>%
delete_set("FR7", 2, "Axe", 0, "Smash n' Magic - 5th Edition") %>%
add_set("FR7", 2, "Naty", 1, 1573413191, "Smash n' Magic - 5th Edition", 2) %>%
fix_set(tournament = "Smash n' Magic - 5th Edition", old_p1 = "FR7", old_score1 = 2, old_p2 = "Gim",
old_score2 = 1, new_p1 = "Axe", new_score1 = 0, new_p2 = "Gim", new_score2 = 2) %>%
fix_set(tournament = "Smash n' Magic - 5th Edition", old_p1 = "Haxwei", old_score1 = 2, old_p2 = "Naty",
old_score2 = 0, new_p1 = "Haxwei", new_score1 = 2, new_p2 = "Gim", new_score2 = 0)  %>%
fix_tag("UF| Ultimate", "Ultimate") %>%
fix_tag("TB Chino", "Chino") %>%
fix_tag("Gucci", "GUCCI") %>%
fix_tag("OOPS", "Oops")
sets_fixed
save(sets_fixed, file = "data/sets_fixed.RData")
write.table(sets_fixed, file = "data/sets_fixed.csv", sep = ",", na = "", row.names = FALSE)
last = unique(sets_fixed$tournament)[length(unique(sets_fixed$tournament))] # último campeonato
tmp = sets_fixed %>%
filter(tournament != last)
players = unique(c(tmp$p1, tmp$p2))
tmp2 = sets_fixed %>%
filter(tournament == last)
players_last = unique(c(tmp2$p1, tmp2$p2))
setdiff(players_last, players)
View(sets)
View(sets_fixed)
library(dplyr)
library(elo)
load("data/sets_fixed.RData")
sets = sets_fixed
sets = sets %>%
mutate(result = score1/(score1 + score2),
k = first_to * 10)
sets
players = tibble(player = c(sets$p1, sets$p2))
players = data.frame(player = unique(c(sets$p1, sets$p2))) %>%
mutate(elo = 1500)
players
last = unique(sets$tournament)[length(unique(sets_fixed$tournament))] # último campeonato
primeira_row_ultimo_camp = which(sets_fixed$tournament == last)[1]
ultima_row_penultimo_camp = primeira_row_ultimo_camp - 1
for (i in 1:ultima_row_penultimo_camp) {
set = sets[i,]
p1_elo = subset(players, player == set$p1)$elo
p2_elo = subset(players, player == set$p2)$elo
new_elo = elo.calc(wins.A = set$result,
elo.A = p1_elo,
elo.B = p2_elo,
k = set$k)
p1_new_elo = new_elo[1, 1]
p2_new_elo = new_elo[1, 2]
players = players %>%
mutate(elo = if_else(player == set$p1, p1_new_elo,
if_else(player == set$p2, p2_new_elo, elo)))
}
players_old = players
for (i in primeira_row_ultimo_camp:nrow(sets)) {
set = sets[i,]
p1_elo = subset(players, player == set$p1)$elo
p2_elo = subset(players, player == set$p2)$elo
new_elo = elo.calc(wins.A = set$result,
elo.A = p1_elo,
elo.B = p2_elo,
k = set$k)
p1_new_elo = new_elo[1, 1]
p2_new_elo = new_elo[1, 2]
players = players %>%
mutate(elo = if_else(player == set$p1, p1_new_elo,
if_else(player == set$p2, p2_new_elo, elo)))
}
players %>%
arrange(desc(elo))
players = players %>%
mutate(set_wins = NA,
total_sets = NA,
set_perc = NA,
game_wins = NA,
total_games = NA,
game_perc = NA,
tournaments = NA,
list_tournaments = NA)
for(i in 1:nrow(players)){
p1 = sets %>%
filter(p1 == players$player[i])
set_wins_1 = p1 %>%
filter(result > 0.5) %>%
nrow()
total_sets_1 = p1 %>%
nrow()
game_wins_1 = sum(p1$score1)
total_games_1 = sum(p1$score1) + sum(p1$score2)
p2 = sets %>%
filter(p2 == players$player[i])
set_wins_2 = p2 %>%
filter(result < 0.5) %>%
nrow()
total_sets_2 = p2 %>%
nrow()
game_wins_2 = sum(p2$score2)
total_games_2 = sum(p2$score1) + sum(p2$score2)
players$set_wins[i] = set_wins_1 + set_wins_2
players$total_sets[i] = total_sets_1 + total_sets_2
players$set_perc[i] = players$set_wins[i]/players$total_sets[i]
players$game_wins[i] = game_wins_1 + game_wins_2
players$total_games[i] = total_games_1 + total_games_2
players$game_perc[i] = players$game_wins[i]/players$total_games[i]
players$tournaments[i] = length(unique(c(p1$tournament, p2$tournament)))
players$list_tournaments[i] = paste(unique(c(p1$tournament, p2$tournament)), collapse = ", ")
}
players_old = players_old %>%
rename(old_elo = elo)
players = players %>%
full_join(players_old) %>%
mutate(var_elo = elo - old_elo)
players = players %>%
arrange(desc(elo))
players
save(players, file = "data/players.RData")
write.table(players, file = "data/players.csv", sep = ",", na = "", row.names = FALSE, dec = ".")
library(dplyr)
load("data/sets_fixed.RData")
for(i in 1:nrow(sets_fixed)) {
if(sets_fixed$p1[i] > sets_fixed$p2[i]) {
tmp_p1 = sets_fixed$p1[i]
#tmp_id1 = sets_fixed$id1[i]
tmp_score1 = sets_fixed$score1[i]
sets_fixed$p1[i] = sets_fixed$p2[i]
#sets_fixed$id1[i] = sets_fixed$id2[i]
sets_fixed$score1[i] = sets_fixed$score2[i]
sets_fixed$p2[i] = tmp_p1
#sets_fixed$id2[i] = tmp_id1
sets_fixed$score2[i] = tmp_score1
}
}
sets_suma = sets_fixed %>%
mutate(win_p1 = ifelse(score1 > score2, 1, 0)) %>%
mutate(win_p2 = ifelse(score1 > score2, 0, 1)) %>%
group_by(p1, p2) %>%
summarise(sets = n(),
set_wins_p1 = sum(win_p1),
set_wins_p2 = sum(win_p2),
game_wins_p1 = sum(score1),
game_wins_p2 = sum(score2),
tournaments = paste(tournament, collapse = ", ")) %>%
arrange(desc(sets))
sets_suma
save(sets_suma, file = "data/sets_suma.RData")
write.table(sets_suma, file = "data/sets_suma.csv", sep = ",", na = "", row.names = FALSE)
library(dplyr)
library(knitr)
load("data/players.RData")
load("data/sets_fixed.RData")
unique(sets_fixed$tournament)
players %>%
filter(tournaments > 2) %>%
mutate(sign = ifelse(var_elo >= 0, "+", "-"),
var_elo = abs(var_elo),
elo = paste0(round(elo, 2), " (", sign, round(var_elo, 2), ")")) %>%
select(-list_tournaments,
-old_elo,
-var_elo,
-sign) %>%
head(50) %>%
kable(digits = 2, format = "markdown", row.names = TRUE)
