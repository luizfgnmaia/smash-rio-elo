---
title: "Elo"
output: html_notebook
---

Baseado em: https://edomt.github.io/Elo-R-WorldCup/

```{r, warning = FALSE, message = FALSE}
library(dplyr)
library(elo)

load("data/sets_fixed.RData")
sets = sets_fixed
```

Valor inicial do elo: 1500, parâmetro k é 20 para bo3 e 30 para bo5, resultado é dado por score1/(score1 + score2).
```{r}
sets = sets %>%
  mutate(result = score1/(score1 + score2),
         k = first_to * 10)

sets
```

```{r}
players = tibble(player = c(sets$p1, sets$p2))
```

```{r}
players = data.frame(player = unique(c(sets$p1, sets$p2))) %>%
  mutate(elo = 1500)

players
```

```{r}
for (i in 1:nrow(sets)) {
  set = sets[i,]

  p1_elo = subset(players, player == set$p1)$elo
  p2_elo = subset(players, player == set$p2)$elo
  
  new_elo = elo.calc(wins.A = set$result,
                      elo.A = p1_elo,
                      elo.B = p2_elo,
                      k = set$k)
  
  p1_new_elo = new_elo[1, 1]
  p2_new_elo = new_elo[1, 2]
  
  players = players %>%
    mutate(elo = if_else(player == set$p1, p1_new_elo,
                         if_else(player == set$p2, p2_new_elo, elo)))
}
```

```{r}
players %>%
  arrange(desc(elo))
```

```{r}
players = players %>%
  mutate(set_wins = NA,
         total_sets = NA,
         set_perc = NA,
         game_wins = NA,
         total_games = NA,
         game_perc = NA,
         tournaments = NA,
         list_tournaments = NA)

for(i in 1:nrow(players)){
  p1 = sets %>%
    filter(p1 == players$player[i])
  set_wins_1 = p1 %>%
    filter(result > 0.5) %>%
    nrow()
  total_sets_1 = p1 %>%
    nrow()
  game_wins_1 = sum(p1$score1)
  total_games_1 = sum(p1$score1) + sum(p1$score2)
  p2 = sets %>%
    filter(p2 == players$player[i])
  set_wins_2 = p2 %>%
    filter(result < 0.5) %>%
    nrow()
  total_sets_2 = p2 %>%
    nrow()
  game_wins_2 = sum(p2$score2)
  total_games_2 = sum(p2$score1) + sum(p2$score2)
  players$set_wins[i] = set_wins_1 + set_wins_2
  players$total_sets[i] = total_sets_1 + total_sets_2
  players$set_perc[i] = players$set_wins[i]/players$total_sets[i]
  players$game_wins[i] = game_wins_1 + game_wins_2
  players$total_games[i] = total_games_1 + total_games_2
  players$game_perc[i] = players$game_wins[i]/players$total_games[i]
  players$tournaments[i] = length(unique(c(p1$tournament, p2$tournament)))
  players$list_tournaments[i] = paste(unique(c(p1$tournament, p2$tournament)), collapse = ", ")
}
```

```{r}
players = players %>%
  arrange(desc(elo))

players
```

```{r}
save(players, file = "data/players.RData")
```

```{r}
write.table(players, file = "data/players.csv", sep = ",", na = "", row.names = FALSE, dec = ".")
```



